// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "Bellz.h"
#include "Bellz.generated.dep.h"
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1Bellz() {}
	void ABellzGameMode::StaticRegisterNativesABellzGameMode()
	{
	}
	IMPLEMENT_CLASS(ABellzGameMode, 3878678164);
	void AEnemy::StaticRegisterNativesAEnemy()
	{
		FNativeFunctionRegistrar::RegisterFunction(AEnemy::StaticClass(), "OnHandTriggerOverlap",(Native)&AEnemy::execOnHandTriggerOverlap);
		FNativeFunctionRegistrar::RegisterFunction(AEnemy::StaticClass(), "OnHearNoise",(Native)&AEnemy::execOnHearNoise);
		FNativeFunctionRegistrar::RegisterFunction(AEnemy::StaticClass(), "OnPerformAttack",(Native)&AEnemy::execOnPerformAttack);
		FNativeFunctionRegistrar::RegisterFunction(AEnemy::StaticClass(), "OnPostAttack",(Native)&AEnemy::execOnPostAttack);
		FNativeFunctionRegistrar::RegisterFunction(AEnemy::StaticClass(), "OnPreAttack",(Native)&AEnemy::execOnPreAttack);
		FNativeFunctionRegistrar::RegisterFunction(AEnemy::StaticClass(), "OnSeePawn",(Native)&AEnemy::execOnSeePawn);
	}
	IMPLEMENT_CLASS(AEnemy, 575742571);
	void AEnemyAIController::StaticRegisterNativesAEnemyAIController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AEnemyAIController::StaticClass(), "GetEnemy",(Native)&AEnemyAIController::execGetEnemy);
		FNativeFunctionRegistrar::RegisterFunction(AEnemyAIController::StaticClass(), "OnSearchForEnemy",(Native)&AEnemyAIController::execOnSearchForEnemy);
		FNativeFunctionRegistrar::RegisterFunction(AEnemyAIController::StaticClass(), "PawnCanBeSeen",(Native)&AEnemyAIController::execPawnCanBeSeen);
		FNativeFunctionRegistrar::RegisterFunction(AEnemyAIController::StaticClass(), "SetEnemy",(Native)&AEnemyAIController::execSetEnemy);
		FNativeFunctionRegistrar::RegisterFunction(AEnemyAIController::StaticClass(), "UpdateControlRotation",(Native)&AEnemyAIController::execUpdateControlRotation);
	}
	IMPLEMENT_CLASS(AEnemyAIController, 1490213887);
class UScriptStruct* FMissionStruct::StaticStruct()
{
	extern BELLZ_API class UPackage* Z_Construct_UPackage__Script_Bellz();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern BELLZ_API class UScriptStruct* Z_Construct_UScriptStruct_FMissionStruct();
		extern BELLZ_API uint32 Get_Z_Construct_UScriptStruct_FMissionStruct_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMissionStruct, Z_Construct_UPackage__Script_Bellz(), TEXT("MissionStruct"), sizeof(FMissionStruct), Get_Z_Construct_UScriptStruct_FMissionStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMissionStruct(FMissionStruct::StaticStruct, TEXT("/Script/Bellz"), TEXT("MissionStruct"), false, nullptr, nullptr);
static struct FScriptStruct_Bellz_StaticRegisterNativesFMissionStruct
{
	FScriptStruct_Bellz_StaticRegisterNativesFMissionStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MissionStruct")),new UScriptStruct::TCppStructOps<FMissionStruct>);
	}
} ScriptStruct_Bellz_StaticRegisterNativesFMissionStruct;
class UScriptStruct* FWeaponStruct::StaticStruct()
{
	extern BELLZ_API class UPackage* Z_Construct_UPackage__Script_Bellz();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern BELLZ_API class UScriptStruct* Z_Construct_UScriptStruct_FWeaponStruct();
		extern BELLZ_API uint32 Get_Z_Construct_UScriptStruct_FWeaponStruct_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FWeaponStruct, Z_Construct_UPackage__Script_Bellz(), TEXT("WeaponStruct"), sizeof(FWeaponStruct), Get_Z_Construct_UScriptStruct_FWeaponStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWeaponStruct(FWeaponStruct::StaticStruct, TEXT("/Script/Bellz"), TEXT("WeaponStruct"), false, nullptr, nullptr);
static struct FScriptStruct_Bellz_StaticRegisterNativesFWeaponStruct
{
	FScriptStruct_Bellz_StaticRegisterNativesFWeaponStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("WeaponStruct")),new UScriptStruct::TCppStructOps<FWeaponStruct>);
	}
} ScriptStruct_Bellz_StaticRegisterNativesFWeaponStruct;
	void AGameDataTables::StaticRegisterNativesAGameDataTables()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGameDataTables::StaticClass(), "OnFetchAllTables",(Native)&AGameDataTables::execOnFetchAllTables);
	}
	IMPLEMENT_CLASS(AGameDataTables, 895397154);
	void AGladiator::StaticRegisterNativesAGladiator()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "GetCameraBoomAlternate",(Native)&AGladiator::execGetCameraBoomAlternate);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "GetIsStillAlive",(Native)&AGladiator::execGetIsStillAlive);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "Jump",(Native)&AGladiator::execJump);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "MoveForward",(Native)&AGladiator::execMoveForward);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "MoveRight",(Native)&AGladiator::execMoveRight);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "OnAttack",(Native)&AGladiator::execOnAttack);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "OnChangeHealthByAmount",(Native)&AGladiator::execOnChangeHealthByAmount);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "OnChangeWeapon",(Native)&AGladiator::execOnChangeWeapon);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "OnGetHealthAmount",(Native)&AGladiator::execOnGetHealthAmount);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "OnPostAttack",(Native)&AGladiator::execOnPostAttack);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "OnSetPlayerController",(Native)&AGladiator::execOnSetPlayerController);
		FNativeFunctionRegistrar::RegisterFunction(AGladiator::StaticClass(), "StopJumping",(Native)&AGladiator::execStopJumping);
	}
	IMPLEMENT_CLASS(AGladiator, 3197965928);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTree_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UPawnSensingComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USphereComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_AAIController();
	AIMODULE_API class UClass* Z_Construct_UClass_UBehaviorTreeComponent_NoRegister();
	AIMODULE_API class UClass* Z_Construct_UClass_UBlackboardComponent_NoRegister();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTableRowBase();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UClass* Z_Construct_UClass_UDataTable_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	PAPER2D_API class UClass* Z_Construct_UClass_UPaperSpriteComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();

	BELLZ_API class UClass* Z_Construct_UClass_ABellzGameMode_NoRegister();
	BELLZ_API class UClass* Z_Construct_UClass_ABellzGameMode();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemy_OnHandTriggerOverlap();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemy_OnHearNoise();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemy_OnPerformAttack();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemy_OnPostAttack();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemy_OnPreAttack();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemy_OnSeePawn();
	BELLZ_API class UClass* Z_Construct_UClass_AEnemy_NoRegister();
	BELLZ_API class UClass* Z_Construct_UClass_AEnemy();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemyAIController_GetEnemy();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemyAIController_OnSearchForEnemy();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemyAIController_PawnCanBeSeen();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemyAIController_SetEnemy();
	BELLZ_API class UFunction* Z_Construct_UFunction_AEnemyAIController_UpdateControlRotation();
	BELLZ_API class UClass* Z_Construct_UClass_AEnemyAIController_NoRegister();
	BELLZ_API class UClass* Z_Construct_UClass_AEnemyAIController();
	BELLZ_API class UScriptStruct* Z_Construct_UScriptStruct_FMissionStruct();
	BELLZ_API class UScriptStruct* Z_Construct_UScriptStruct_FWeaponStruct();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGameDataTables_OnFetchAllTables();
	BELLZ_API class UClass* Z_Construct_UClass_AGameDataTables_NoRegister();
	BELLZ_API class UClass* Z_Construct_UClass_AGameDataTables();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_GetCameraBoomAlternate();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_GetIsStillAlive();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_Jump();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_MoveForward();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_MoveRight();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_OnAttack();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_OnChangeHealthByAmount();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_OnChangeWeapon();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_OnGetHealthAmount();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_OnPostAttack();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_OnSetPlayerController();
	BELLZ_API class UFunction* Z_Construct_UFunction_AGladiator_StopJumping();
	BELLZ_API class UClass* Z_Construct_UClass_AGladiator_NoRegister();
	BELLZ_API class UClass* Z_Construct_UClass_AGladiator();
	BELLZ_API class UPackage* Z_Construct_UPackage__Script_Bellz();
	UClass* Z_Construct_UClass_ABellzGameMode_NoRegister()
	{
		return ABellzGameMode::StaticClass();
	}
	UClass* Z_Construct_UClass_ABellzGameMode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AGameMode();
			Z_Construct_UPackage__Script_Bellz();
			OuterClass = ABellzGameMode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x2090028C;


				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Info Rendering MovementReplication Replication Actor Input Movement Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("BellzGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("BellzGameMode.h"));
				MetaData->SetValue(OuterClass, TEXT("ShowCategories"), TEXT("Input|MouseInput Input|TouchInput"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_ABellzGameMode(Z_Construct_UClass_ABellzGameMode, &ABellzGameMode::StaticClass, TEXT("ABellzGameMode"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(ABellzGameMode);
	UFunction* Z_Construct_UFunction_AEnemy_OnHandTriggerOverlap()
	{
		struct Enemy_eventOnHandTriggerOverlap_Parms
		{
			UPrimitiveComponent* HitComponent;
			AActor* OtherActor;
			UPrimitiveComponent* OtherComp;
			int32 OtherBodyIndex;
			bool bFromSweep;
			FHitResult SweepResult;
		};
		UObject* Outer=Z_Construct_UClass_AEnemy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnHandTriggerOverlap"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00420401, 65535, sizeof(Enemy_eventOnHandTriggerOverlap_Parms));
			UProperty* NewProp_SweepResult = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SweepResult"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SweepResult, Enemy_eventOnHandTriggerOverlap_Parms), 0x0010008008000182, Z_Construct_UScriptStruct_FHitResult());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFromSweep, Enemy_eventOnHandTriggerOverlap_Parms, bool);
			UProperty* NewProp_bFromSweep = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bFromSweep"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFromSweep, Enemy_eventOnHandTriggerOverlap_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bFromSweep, Enemy_eventOnHandTriggerOverlap_Parms), sizeof(bool), true);
			UProperty* NewProp_OtherBodyIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherBodyIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OtherBodyIndex, Enemy_eventOnHandTriggerOverlap_Parms), 0x0010000000000080);
			UProperty* NewProp_OtherComp = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherComp, Enemy_eventOnHandTriggerOverlap_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, Enemy_eventOnHandTriggerOverlap_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_HitComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("HitComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(HitComponent, Enemy_eventOnHandTriggerOverlap_Parms), 0x0010000000080080, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
			MetaData->SetValue(NewProp_SweepResult, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_OtherComp, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_HitComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemy_OnHearNoise()
	{
		struct Enemy_eventOnHearNoise_Parms
		{
			APawn* OtherActor;
			FVector Location;
			float Volume;
		};
		UObject* Outer=Z_Construct_UClass_AEnemy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnHearNoise"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00C20401, 65535, sizeof(Enemy_eventOnHearNoise_Parms));
			UProperty* NewProp_Volume = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Volume"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Volume, Enemy_eventOnHearNoise_Parms), 0x0010000000000080);
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, Enemy_eventOnHearNoise_Parms), 0x0010000008000182, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, Enemy_eventOnHearNoise_Parms), 0x0010000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
			MetaData->SetValue(NewProp_Location, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemy_OnPerformAttack()
	{
		UObject* Outer=Z_Construct_UClass_AEnemy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPerformAttack"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Enemy AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemy_OnPostAttack()
	{
		UObject* Outer=Z_Construct_UClass_AEnemy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPostAttack"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Enemy AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemy_OnPreAttack()
	{
		UObject* Outer=Z_Construct_UClass_AEnemy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPreAttack"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Enemy AI"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Before, During, and After the attack"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemy_OnSeePawn()
	{
		struct Enemy_eventOnSeePawn_Parms
		{
			APawn* OtherPawn;
		};
		UObject* Outer=Z_Construct_UClass_AEnemy();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSeePawn"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535, sizeof(Enemy_eventOnSeePawn_Parms));
			UProperty* NewProp_OtherPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("OtherPawn"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherPawn, Enemy_eventOnSeePawn_Parms), 0x0010000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AEnemy_NoRegister()
	{
		return AEnemy::StaticClass();
	}
	UClass* Z_Construct_UClass_AEnemy()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_Bellz();
			OuterClass = AEnemy::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AEnemy_OnHandTriggerOverlap());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemy_OnHearNoise());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemy_OnPerformAttack());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemy_OnPostAttack());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemy_OnPreAttack());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemy_OnSeePawn());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EnemyBehaviorTree = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnemyBehaviorTree"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EnemyBehaviorTree, AEnemy), 0x0010000000000001, Z_Construct_UClass_UBehaviorTree_NoRegister());
				UProperty* NewProp_PawnSensor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PawnSensor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PawnSensor, AEnemy), 0x00100000000a001d, Z_Construct_UClass_UPawnSensingComponent_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsAttacking, AEnemy, bool);
				UProperty* NewProp_IsAttacking = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsAttacking"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsAttacking, AEnemy), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(IsAttacking, AEnemy), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsDead, AEnemy, bool);
				UProperty* NewProp_IsDead = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsDead"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsDead, AEnemy), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(IsDead, AEnemy), sizeof(bool), true);
				UProperty* NewProp_AttackDamage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackDamage, AEnemy), 0x0010000000000005);
				UProperty* NewProp_AttackRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackRange"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackRange, AEnemy), 0x0010000000000005);
				UProperty* NewProp_TotalHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TotalHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TotalHealth, AEnemy), 0x0010000000000005);
				UProperty* NewProp_rightHandTrigger = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("rightHandTrigger"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(rightHandTrigger, AEnemy), 0x00100000000a001d, Z_Construct_UClass_USphereComponent_NoRegister());
				UProperty* NewProp_leftHandTrigger = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("leftHandTrigger"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(leftHandTrigger, AEnemy), 0x00100000000a001d, Z_Construct_UClass_USphereComponent_NoRegister());
				UProperty* NewProp_bodySphereTrigger = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bodySphereTrigger"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(bodySphereTrigger, AEnemy), 0x00100000000a001d, Z_Construct_UClass_USphereComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemy_OnHandTriggerOverlap(), "OnHandTriggerOverlap"); // 1934259915
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemy_OnHearNoise(), "OnHearNoise"); // 1253985506
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemy_OnPerformAttack(), "OnPerformAttack"); // 3601214935
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemy_OnPostAttack(), "OnPostAttack"); // 15794373
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemy_OnPreAttack(), "OnPreAttack"); // 2062329937
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemy_OnSeePawn(), "OnSeePawn"); // 959276140
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Enemy.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_EnemyBehaviorTree, TEXT("Category"), TEXT("EnemyAI"));
				MetaData->SetValue(NewProp_EnemyBehaviorTree, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_EnemyBehaviorTree, TEXT("ToolTip"), TEXT("Reference to the behavior tree the ai is going to use"));
				MetaData->SetValue(NewProp_PawnSensor, TEXT("Category"), TEXT("Enemy AI"));
				MetaData->SetValue(NewProp_PawnSensor, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_PawnSensor, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_PawnSensor, TEXT("ToolTip"), TEXT("Sensing component allows the AI to hear and see the player"));
				MetaData->SetValue(NewProp_IsAttacking, TEXT("Category"), TEXT("Enemy Behavior"));
				MetaData->SetValue(NewProp_IsAttacking, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_IsDead, TEXT("Category"), TEXT("Enemy Behavior"));
				MetaData->SetValue(NewProp_IsDead, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_AttackDamage, TEXT("Category"), TEXT("Enemy Behavior"));
				MetaData->SetValue(NewProp_AttackDamage, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_AttackRange, TEXT("Category"), TEXT("Enemy Behavior"));
				MetaData->SetValue(NewProp_AttackRange, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_TotalHealth, TEXT("Category"), TEXT("Enemy Behavior"));
				MetaData->SetValue(NewProp_TotalHealth, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_rightHandTrigger, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_rightHandTrigger, TEXT("Category"), TEXT("Triggers"));
				MetaData->SetValue(NewProp_rightHandTrigger, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_rightHandTrigger, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_rightHandTrigger, TEXT("ToolTip"), TEXT("Right hand trigger to deal damage"));
				MetaData->SetValue(NewProp_leftHandTrigger, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_leftHandTrigger, TEXT("Category"), TEXT("Triggers"));
				MetaData->SetValue(NewProp_leftHandTrigger, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_leftHandTrigger, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_leftHandTrigger, TEXT("ToolTip"), TEXT("Left hand trigger to deal damage"));
				MetaData->SetValue(NewProp_bodySphereTrigger, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_bodySphereTrigger, TEXT("Category"), TEXT("Triggers"));
				MetaData->SetValue(NewProp_bodySphereTrigger, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_bodySphereTrigger, TEXT("ModuleRelativePath"), TEXT("Enemy.h"));
				MetaData->SetValue(NewProp_bodySphereTrigger, TEXT("ToolTip"), TEXT("Body trigger to take damage"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEnemy(Z_Construct_UClass_AEnemy, &AEnemy::StaticClass, TEXT("AEnemy"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AEnemy);
	UFunction* Z_Construct_UFunction_AEnemyAIController_GetEnemy()
	{
		struct EnemyAIController_eventGetEnemy_Parms
		{
			AGladiator* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AEnemyAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetEnemy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54040401, 65535, sizeof(EnemyAIController_eventGetEnemy_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, EnemyAIController_eventGetEnemy_Parms), 0x0010000000000580, Z_Construct_UClass_AGladiator_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behaviour"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("EnemyAIController.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemyAIController_OnSearchForEnemy()
	{
		UObject* Outer=Z_Construct_UClass_AEnemyAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSearchForEnemy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04040401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behaviour"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("EnemyAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when searching for enemey"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemyAIController_PawnCanBeSeen()
	{
		struct EnemyAIController_eventPawnCanBeSeen_Parms
		{
			APawn* target;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AEnemyAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PawnCanBeSeen"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04040401, 65535, sizeof(EnemyAIController_eventPawnCanBeSeen_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, EnemyAIController_eventPawnCanBeSeen_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, EnemyAIController_eventPawnCanBeSeen_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, EnemyAIController_eventPawnCanBeSeen_Parms), sizeof(bool), true);
			UProperty* NewProp_target = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("target"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(target, EnemyAIController_eventPawnCanBeSeen_Parms), 0x0010000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behaviour"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("EnemyAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Determines if the target can be seen by this ai"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemyAIController_SetEnemy()
	{
		struct EnemyAIController_eventSetEnemy_Parms
		{
			APawn* InPawn;
		};
		UObject* Outer=Z_Construct_UClass_AEnemyAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetEnemy"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04040401, 65535, sizeof(EnemyAIController_eventSetEnemy_Parms));
			UProperty* NewProp_InPawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InPawn"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(InPawn, EnemyAIController_eventSetEnemy_Parms), 0x0010000000000080, Z_Construct_UClass_APawn_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behaviour"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("EnemyAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("virtual void BeginInactiveState() override;"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AEnemyAIController_UpdateControlRotation()
	{
		struct EnemyAIController_eventUpdateControlRotation_Parms
		{
			float DeltaTime;
			bool bUpdatePawn;
		};
		UObject* Outer=Z_Construct_UClass_AEnemyAIController();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UpdateControlRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04040401, 65535, sizeof(EnemyAIController_eventUpdateControlRotation_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUpdatePawn, EnemyAIController_eventUpdateControlRotation_Parms, bool);
			UProperty* NewProp_bUpdatePawn = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bUpdatePawn"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUpdatePawn, EnemyAIController_eventUpdateControlRotation_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bUpdatePawn, EnemyAIController_eventUpdateControlRotation_Parms), sizeof(bool), true);
			UProperty* NewProp_DeltaTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("DeltaTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DeltaTime, EnemyAIController_eventUpdateControlRotation_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Behaviour"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("EnemyAIController.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Rotates ai towards player"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AEnemyAIController_NoRegister()
	{
		return AEnemyAIController::StaticClass();
	}
	UClass* Z_Construct_UClass_AEnemyAIController()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AAIController();
			Z_Construct_UPackage__Script_Bellz();
			OuterClass = AEnemyAIController::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900280;

				OuterClass->LinkChild(Z_Construct_UFunction_AEnemyAIController_GetEnemy());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemyAIController_OnSearchForEnemy());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemyAIController_PawnCanBeSeen());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemyAIController_SetEnemy());
				OuterClass->LinkChild(Z_Construct_UFunction_AEnemyAIController_UpdateControlRotation());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BehaviourComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BehaviourComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BehaviourComp, AEnemyAIController), 0x0040000000082008, Z_Construct_UClass_UBehaviorTreeComponent_NoRegister());
				UProperty* NewProp_BlackboardComp = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BlackboardComp"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(BlackboardComp, AEnemyAIController), 0x0040000000082008, Z_Construct_UClass_UBlackboardComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemyAIController_GetEnemy(), "GetEnemy"); // 324403416
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemyAIController_OnSearchForEnemy(), "OnSearchForEnemy"); // 3543489596
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemyAIController_PawnCanBeSeen(), "PawnCanBeSeen"); // 561000367
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemyAIController_SetEnemy(), "SetEnemy"); // 1518102654
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AEnemyAIController_UpdateControlRotation(), "UpdateControlRotation"); // 856932041
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Collision Rendering Utilities|Transformation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EnemyAIController.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("EnemyAIController.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_BehaviourComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BehaviourComp, TEXT("ModuleRelativePath"), TEXT("EnemyAIController.h"));
				MetaData->SetValue(NewProp_BlackboardComp, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_BlackboardComp, TEXT("ModuleRelativePath"), TEXT("EnemyAIController.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AEnemyAIController(Z_Construct_UClass_AEnemyAIController, &AEnemyAIController::StaticClass, TEXT("AEnemyAIController"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AEnemyAIController);
	UScriptStruct* Z_Construct_UScriptStruct_FMissionStruct()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Bellz();
		extern uint32 Get_Z_Construct_UScriptStruct_FMissionStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MissionStruct"), sizeof(FMissionStruct), Get_Z_Construct_UScriptStruct_FMissionStruct_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MissionStruct"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTableRowBase(), new UScriptStruct::TCppStructOps<FMissionStruct>, EStructFlags(0x00000001));
			UProperty* NewProp_Collect = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Collect"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Collect, FMissionStruct), 0x0010000000020015);
			UProperty* NewProp_Kill = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Kill"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Kill, FMissionStruct), 0x0010000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
			MetaData->SetValue(NewProp_Collect, TEXT("Category"), TEXT("MissionStruct"));
			MetaData->SetValue(NewProp_Collect, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
			MetaData->SetValue(NewProp_Kill, TEXT("Category"), TEXT("MissionStruct"));
			MetaData->SetValue(NewProp_Kill, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMissionStruct_CRC() { return 1663155185U; }
	UScriptStruct* Z_Construct_UScriptStruct_FWeaponStruct()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Bellz();
		extern uint32 Get_Z_Construct_UScriptStruct_FWeaponStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("WeaponStruct"), sizeof(FWeaponStruct), Get_Z_Construct_UScriptStruct_FWeaponStruct_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WeaponStruct"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTableRowBase(), new UScriptStruct::TCppStructOps<FWeaponStruct>, EStructFlags(0x00000001));
			UProperty* NewProp_CooldownTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CooldownTime"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CooldownTime, FWeaponStruct), 0x0010000000020015);
			UProperty* NewProp_Damage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Damage"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Damage, FWeaponStruct), 0x0010000000020015);
			UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DisplayName, FWeaponStruct), 0x0010000000020015);
			UProperty* NewProp_Icon = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Icon"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Icon, FWeaponStruct), 0x0010000000020015);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("IsBlueprintBase"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
			MetaData->SetValue(NewProp_CooldownTime, TEXT("Category"), TEXT("WeaponStruct"));
			MetaData->SetValue(NewProp_CooldownTime, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
			MetaData->SetValue(NewProp_Damage, TEXT("Category"), TEXT("WeaponStruct"));
			MetaData->SetValue(NewProp_Damage, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("WeaponStruct"));
			MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
			MetaData->SetValue(NewProp_Icon, TEXT("Category"), TEXT("WeaponStruct"));
			MetaData->SetValue(NewProp_Icon, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FWeaponStruct_CRC() { return 836365897U; }
	UFunction* Z_Construct_UFunction_AGameDataTables_OnFetchAllTables()
	{
		UObject* Outer=Z_Construct_UClass_AGameDataTables();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnFetchAllTables"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game DataTables"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AGameDataTables_NoRegister()
	{
		return AGameDataTables::StaticClass();
	}
	UClass* Z_Construct_UClass_AGameDataTables()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_AActor();
			Z_Construct_UPackage__Script_Bellz();
			OuterClass = AGameDataTables::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AGameDataTables_OnFetchAllTables());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AllMissionsData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AllMissionsData"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AllMissionsData, AGameDataTables), 0x0010000000020005);
				UProperty* NewProp_AllMissionsData_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AllMissionsData, TEXT("AllMissionsData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FMissionStruct());
				UProperty* NewProp_AllWeaponsData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AllWeaponsData"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AllWeaponsData, AGameDataTables), 0x0010000000020005);
				UProperty* NewProp_AllWeaponsData_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AllWeaponsData, TEXT("AllWeaponsData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000020000, Z_Construct_UScriptStruct_FWeaponStruct());
				UProperty* NewProp_MissionsTable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MissionsTable"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MissionsTable, AGameDataTables), 0x0010000000000005, Z_Construct_UClass_UDataTable_NoRegister());
				UProperty* NewProp_WeaponsTable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponsTable"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WeaponsTable, AGameDataTables), 0x0010000000000005, Z_Construct_UClass_UDataTable_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGameDataTables_OnFetchAllTables(), "OnFetchAllTables"); // 1900020970
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameDataTables.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_AllMissionsData, TEXT("Category"), TEXT("Game DataTables"));
				MetaData->SetValue(NewProp_AllMissionsData, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
				MetaData->SetValue(NewProp_AllWeaponsData, TEXT("Category"), TEXT("Game DataTables"));
				MetaData->SetValue(NewProp_AllWeaponsData, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
				MetaData->SetValue(NewProp_MissionsTable, TEXT("Category"), TEXT("Game DataTables"));
				MetaData->SetValue(NewProp_MissionsTable, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
				MetaData->SetValue(NewProp_WeaponsTable, TEXT("Category"), TEXT("Game DataTables"));
				MetaData->SetValue(NewProp_WeaponsTable, TEXT("ModuleRelativePath"), TEXT("GameDataTables.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGameDataTables(Z_Construct_UClass_AGameDataTables, &AGameDataTables::StaticClass, TEXT("AGameDataTables"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGameDataTables);
	UFunction* Z_Construct_UFunction_AGladiator_GetCameraBoomAlternate()
	{
		struct Gladiator_eventGetCameraBoomAlternate_Parms
		{
			USpringArmComponent* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetCameraBoomAlternate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(Gladiator_eventGetCameraBoomAlternate_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, Gladiator_eventGetCameraBoomAlternate_Parms), 0x0010000000080588, Z_Construct_UClass_USpringArmComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Attributes"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
			MetaData->SetValue(NewProp_ReturnValue, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_GetIsStillAlive()
	{
		struct Gladiator_eventGetIsStillAlive_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetIsStillAlive"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(Gladiator_eventGetIsStillAlive_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, Gladiator_eventGetIsStillAlive_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, Gladiator_eventGetIsStillAlive_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, Gladiator_eventGetIsStillAlive_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Attributes"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_Jump()
	{
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Jump"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Actions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_MoveForward()
	{
		struct Gladiator_eventMoveForward_Parms
		{
			float value;
		};
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveForward"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(Gladiator_eventMoveForward_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(value, Gladiator_eventMoveForward_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Actions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_MoveRight()
	{
		struct Gladiator_eventMoveRight_Parms
		{
			float value;
		};
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MoveRight"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535, sizeof(Gladiator_eventMoveRight_Parms));
			UProperty* NewProp_value = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("value"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(value, Gladiator_eventMoveRight_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Actions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_OnAttack()
	{
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnAttack"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Actions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_OnChangeHealthByAmount()
	{
		struct Gladiator_eventOnChangeHealthByAmount_Parms
		{
			float usedAmount;
		};
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChangeHealthByAmount"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Gladiator_eventOnChangeHealthByAmount_Parms));
			UProperty* NewProp_usedAmount = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("usedAmount"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(usedAmount, Gladiator_eventOnChangeHealthByAmount_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Attributes"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called when player health has been changed"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_OnChangeWeapon()
	{
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnChangeWeapon"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Actions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_OnGetHealthAmount()
	{
		struct Gladiator_eventOnGetHealthAmount_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnGetHealthAmount"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(Gladiator_eventOnGetHealthAmount_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, Gladiator_eventOnGetHealthAmount_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Attributes"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_OnPostAttack()
	{
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnPostAttack"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Actions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called after the player has finished an attack"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_OnSetPlayerController()
	{
		struct Gladiator_eventOnSetPlayerController_Parms
		{
			bool status;
		};
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnSetPlayerController"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(Gladiator_eventOnSetPlayerController_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(status, Gladiator_eventOnSetPlayerController_Parms, bool);
			UProperty* NewProp_status = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("status"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(status, Gladiator_eventOnSetPlayerController_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(status, Gladiator_eventOnSetPlayerController_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Attributes"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("status determines whether or not the player should have control over the controller"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_AGladiator_StopJumping()
	{
		UObject* Outer=Z_Construct_UClass_AGladiator();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StopJumping"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04080401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Player Actions"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stops the jump and goes back to idle/run"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_AGladiator_NoRegister()
	{
		return AGladiator::StaticClass();
	}
	UClass* Z_Construct_UClass_AGladiator()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_ACharacter();
			Z_Construct_UPackage__Script_Bellz();
			OuterClass = AGladiator::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;

				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_GetCameraBoomAlternate());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_GetIsStillAlive());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_Jump());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_MoveForward());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_MoveRight());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_OnAttack());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_OnChangeHealthByAmount());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_OnChangeWeapon());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_OnGetHealthAmount());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_OnPostAttack());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_OnSetPlayerController());
				OuterClass->LinkChild(Z_Construct_UFunction_AGladiator_StopJumping());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_AttackRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AttackRange"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AttackRange, AGladiator), 0x0020080000000005);
				UProperty* NewProp_TotalHealth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TotalHealth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TotalHealth, AGladiator), 0x0020080000000005);
				UProperty* NewProp_TablesInstance = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TablesInstance"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(TablesInstance, AGladiator), 0x0010000000000015, Z_Construct_UClass_AGameDataTables_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsControlable, AGladiator, bool);
				UProperty* NewProp_IsControlable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsControlable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsControlable, AGladiator), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(IsControlable, AGladiator), sizeof(bool), true);
				UProperty* NewProp_WeaponIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("WeaponIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(WeaponIndex, AGladiator), 0x0010000000000015);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsAttacking, AGladiator, bool);
				UProperty* NewProp_IsAttacking = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsAttacking"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsAttacking, AGladiator), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(IsAttacking, AGladiator), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(IsStillAlive, AGladiator, bool);
				UProperty* NewProp_IsStillAlive = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("IsStillAlive"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(IsStillAlive, AGladiator), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(IsStillAlive, AGladiator), sizeof(bool), true);
				UProperty* NewProp_jumppingVelocity = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("jumppingVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(jumppingVelocity, AGladiator), 0x0010000000020015);
				UProperty* NewProp_BaseLookUpRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseLookUpRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseLookUpRate, AGladiator), 0x0010000000020015);
				UProperty* NewProp_BaseTurnRate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BaseTurnRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseTurnRate, AGladiator), 0x0010000000020015);
				UProperty* NewProp_EffectSprite = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EffectSprite"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(EffectSprite, AGladiator), 0x00100000000a001d, Z_Construct_UClass_UPaperSpriteComponent_NoRegister());
				UProperty* NewProp_FollowCamera = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FollowCamera"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(FollowCamera, AGladiator), 0x00100000000a001d, Z_Construct_UClass_UCameraComponent_NoRegister());
				UProperty* NewProp_CameraBoom = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraBoom"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CameraBoom, AGladiator), 0x00100000000a001d, Z_Construct_UClass_USpringArmComponent_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_GetCameraBoomAlternate(), "GetCameraBoomAlternate"); // 3029105268
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_GetIsStillAlive(), "GetIsStillAlive"); // 4176200591
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_Jump(), "Jump"); // 1587542811
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_MoveForward(), "MoveForward"); // 3634727939
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_MoveRight(), "MoveRight"); // 3355037726
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_OnAttack(), "OnAttack"); // 4155882324
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_OnChangeHealthByAmount(), "OnChangeHealthByAmount"); // 2809996369
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_OnChangeWeapon(), "OnChangeWeapon"); // 2343285426
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_OnGetHealthAmount(), "OnGetHealthAmount"); // 4167756467
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_OnPostAttack(), "OnPostAttack"); // 729347001
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_OnSetPlayerController(), "OnSetPlayerController"); // 4142622724
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_AGladiator_StopJumping(), "StopJumping"); // 335694569
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Navigation"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(OuterClass, TEXT("OnlyDefaultConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_AttackRange, TEXT("Category"), TEXT("Player Attributes"));
				MetaData->SetValue(NewProp_AttackRange, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_TotalHealth, TEXT("Category"), TEXT("Player Attributes"));
				MetaData->SetValue(NewProp_TotalHealth, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_TablesInstance, TEXT("Category"), TEXT("Game DataTables"));
				MetaData->SetValue(NewProp_TablesInstance, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_IsControlable, TEXT("Category"), TEXT("Player Attributes"));
				MetaData->SetValue(NewProp_IsControlable, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_IsControlable, TEXT("ToolTip"), TEXT("Can the player still give input"));
				MetaData->SetValue(NewProp_WeaponIndex, TEXT("Category"), TEXT("Player Attributes"));
				MetaData->SetValue(NewProp_WeaponIndex, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_WeaponIndex, TEXT("ToolTip"), TEXT("Index of the players currently selected weapon"));
				MetaData->SetValue(NewProp_IsAttacking, TEXT("Category"), TEXT("Player Attributes"));
				MetaData->SetValue(NewProp_IsAttacking, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_IsStillAlive, TEXT("Category"), TEXT("Player Attributes"));
				MetaData->SetValue(NewProp_IsStillAlive, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_jumppingVelocity, TEXT("Category"), TEXT("Player Attributes"));
				MetaData->SetValue(NewProp_jumppingVelocity, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_jumppingVelocity, TEXT("ToolTip"), TEXT("Vertical jump speed of the player"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_BaseLookUpRate, TEXT("ToolTip"), TEXT("How fast the camera can look up and down in degrees per second"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_BaseTurnRate, TEXT("ToolTip"), TEXT("How fast the camera can look left and right in degrees per second"));
				MetaData->SetValue(NewProp_EffectSprite, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_EffectSprite, TEXT("Category"), TEXT("Effects"));
				MetaData->SetValue(NewProp_EffectSprite, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_EffectSprite, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_EffectSprite, TEXT("ToolTip"), TEXT("Paper2D sprite used to render some effects instead of using HUD"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_FollowCamera, TEXT("ToolTip"), TEXT("Reference to the camera itself"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("AllowPrivateAccess"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("Category"), TEXT("Camera"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ModuleRelativePath"), TEXT("Gladiator.h"));
				MetaData->SetValue(NewProp_CameraBoom, TEXT("ToolTip"), TEXT("Camera boom used for positioning the camera behind the player"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_AGladiator(Z_Construct_UClass_AGladiator, &AGladiator::StaticClass, TEXT("AGladiator"), false, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(AGladiator);
	UPackage* Z_Construct_UPackage__Script_Bellz()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/Bellz")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x54931F6D;
			Guid.B = 0xCB547941;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
